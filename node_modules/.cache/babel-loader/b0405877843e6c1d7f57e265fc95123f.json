{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\amplifyapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { API, Storage } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport { listNotes } from './graphql/queries';\nimport { createNote as createNoteMutation, deleteNote as deleteNoteMutation } from './graphql/mutations';\nconst initialFormState = {\n  name: '',\n  description: ''\n};\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  async function fetchNotes() {\n    const apiData = await API.graphql({\n      query: listNotes\n    });\n    const notesFromAPI = apiData.data.listNotes.items;\n    await Promise.all(notesFromAPI.map(async note => {\n      if (note.image) {\n        const image = await Storage.get(note.image);\n        note.image = image;\n      }\n\n      return note;\n    }));\n    setNotes(apiData.data.listNotes.items);\n  }\n\n  async function createNote() {\n    if (!formData.name || !formData.description) return;\n    formData.description = formData.description + ' [Created on ' + new Date() + ']';\n    await API.graphql({\n      query: createNoteMutation,\n      variables: {\n        input: formData\n      }\n    });\n\n    if (formData.image) {\n      const image = await Storage.get(formData.image);\n      formData.image = image;\n    }\n\n    setNotes([...notes, formData]);\n    setFormData(initialFormState);\n  }\n\n  async function deleteNote({\n    id\n  }) {\n    const newNotesArray = notes.filter(note => note.id !== id);\n    setNotes(newNotesArray);\n    await API.graphql({\n      query: deleteNoteMutation,\n      variables: {\n        input: {\n          id\n        }\n      }\n    });\n  }\n\n  async function onChange(e) {\n    if (!e.target.files[0]) return;\n    const file = e.target.files[0];\n    setFormData({ ...formData,\n      image: file.name\n    });\n    await Storage.put(file.name, file);\n    fetchNotes();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"thecodeschool Notes App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Note Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Note Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Upload photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"gfg\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          class: \"geeks\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setFormData({ ...formData,\n              'name': e.target.value\n            }),\n            placeholder: \"Note name\",\n            value: formData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"textarea\",\n            onChange: e => setFormData({ ...formData,\n              'description': e.target.value\n            }),\n            placeholder: \"Note description\",\n            value: formData.description,\n            rows: 10,\n            cols: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createNote,\n            children: \"Create Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 30\n      },\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: note.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), note.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: note.image,\n          style: {\n            width: 400\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteNote(note),\n          children: \"Delete note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, note.id || note.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AmplifySignOut, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JPBvvkw3reuBWHQ6nysTAgsogYI=\");\n\n_c = App;\nexport default _c2 = withAuthenticator(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/amplifyapp/src/App.js"],"names":["React","useState","useEffect","API","Storage","withAuthenticator","AmplifySignOut","listNotes","createNote","createNoteMutation","deleteNote","deleteNoteMutation","initialFormState","name","description","App","notes","setNotes","formData","setFormData","fetchNotes","apiData","graphql","query","notesFromAPI","data","items","Promise","all","map","note","image","get","Date","variables","input","id","newNotesArray","filter","onChange","e","target","files","file","put","value","marginBottom","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { API, Storage } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport { listNotes } from './graphql/queries';\nimport { createNote as createNoteMutation, deleteNote as deleteNoteMutation } from './graphql/mutations';\n\nconst initialFormState = { name: '', description: '' }\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  async function fetchNotes() {\n    const apiData = await API.graphql({ query: listNotes });\n    const notesFromAPI = apiData.data.listNotes.items;\n    await Promise.all(notesFromAPI.map(async note => {\n      if (note.image) {\n        const image = await Storage.get(note.image);\n        note.image = image;\n      }\n      return note;\n    }))\n    setNotes(apiData.data.listNotes.items);\n  }\n\n  async function createNote() {\n    if (!formData.name || !formData.description) return;\n    formData.description = formData.description + ' [Created on ' + new Date() + ']';\n    await API.graphql({ query: createNoteMutation, variables: { input: formData } });\n    if (formData.image) {\n      const image = await Storage.get(formData.image);\n      formData.image = image;\n    }\n    setNotes([ ...notes, formData ]);\n    setFormData(initialFormState);\n  }\n\n  async function deleteNote({ id }) {\n    const newNotesArray = notes.filter(note => note.id !== id);\n    setNotes(newNotesArray);\n    await API.graphql({ query: deleteNoteMutation, variables: { input: { id } }});\n  }\n\n  async function onChange(e) {\n    if (!e.target.files[0]) return\n    const file = e.target.files[0];\n    setFormData({ ...formData, image: file.name });\n    await Storage.put(file.name, file);\n    fetchNotes();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>thecodeschool Notes App</h1>\n      <table> \n            <tr> \n                <th>Note Name</th> \n                <th>Note Description</th> \n                <th>Upload photo</th>\n                <th></th> \n            </tr> \n        </table>\n        <table class = \"gfg\"> \n            <tr> \n                <td class = \"geeks\">\n                  <input\n                    onChange={e => setFormData({ ...formData, 'name': e.target.value})}\n                    placeholder=\"Note name\"\n                    value={formData.name}\n                  />\n                </td> \n                <td>\n                  <textarea\n                    type=\"textarea\"\n                    onChange={e => setFormData({ ...formData, 'description': e.target.value})}\n                    placeholder=\"Note description\"\n                    value={formData.description}\n                    rows={10}\n                    cols={50}\n                  />\n                </td> \n                <td>\n                  <input\n                    type=\"file\"\n                    onChange={onChange}\n                  />\n                </td> \n                <td>\n                <button onClick={createNote}>Create Note</button>\n                </td> \n            </tr> \n        </table>  \n\n      <div style={{marginBottom: 30}}>\n      {\n        notes.map(note => (\n          <div key={note.id || note.name}>\n            <h2>{note.name}</h2>\n            <div>{note.description}</div>\n            {\n              note.image && <img src={note.image} style={{width: 400}} />\n            } <br/>\n            <button onClick={() => deleteNote(note)}>Delete note</button>\n          </div>\n        ))\n      }\n      </div>\n      <AmplifySignOut />\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);"]},"metadata":{},"sourceType":"module"}