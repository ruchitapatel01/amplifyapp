import{Logger as e,isEmpty as r}from"@aws-amplify/core";import{A as t,C as o}from"./p-417bb5ea.js";import{Auth as s}from"@aws-amplify/auth";import{T as a}from"./p-fd198e7b.js";import{N as n}from"./p-2915ed18.js";import{a as i}from"./p-2dc32259.js";const c=new e("auth-helpers");async function p(e,o){if(!s||"function"!=typeof s.verifiedContact)throw new Error(n);try{const a=await s.verifiedContact(e);if(!r(a.verified)||r(a.unverified))o(t.SignedIn,e);else{const r=Object.assign(e,a);o(t.VerifyContact,r)}}catch(a){i(a)}}const m=async(e,r,m)=>{if(!s||"function"!=typeof s.signIn)throw new Error(n);try{const a=await s.signIn(e,r);c.debug(a),a.challengeName===o.SMSMFA||a.challengeName===o.SoftwareTokenMFA?(c.debug("confirm user with "+a.challengeName),m(t.ConfirmSignIn,a)):a.challengeName===o.NewPasswordRequired?(c.debug("require new password",a.challengeParam),m(t.ResetPassword,a)):a.challengeName===o.MFASetup?(c.debug("TOTP setup",a.challengeParam),m(t.TOTPSetup,a)):a.challengeName===o.CustomChallenge&&a.challengeParam&&"true"===a.challengeParam.trigger?(c.debug("custom challenge",a.challengeParam),m(t.CustomConfirmSignIn,a)):await p(a,m)}catch(f){"UserNotConfirmedException"===f.code?(c.debug("the user is not confirmed"),m(t.ConfirmSignUp,{username:e})):"PasswordResetRequiredException"===f.code?(c.debug("the user requires a new password"),m(t.ForgotPassword,{username:e})):"InvalidParameterException"===f.code&&""===r&&(c.debug("Password cannot be empty"),f.message=a.EMPTY_PASSWORD),i(f)}};export{p as c,m as h}